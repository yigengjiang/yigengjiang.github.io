[{"content":" 我知道 那些夏天 就像青春一样回不来 代替梦想的只能是勉为其难 从今年开始，我打算每年写一次年度总结，对昨年自己的学习生活进行梳理总结，希望能够对未来带来一些启示。而年度总结的标题，如果每次都以xxxx年度总结以题显得太没有特色。所以，我决定自拟标题，一些歌、诗词、文章言论都在考虑范围内。23年便以宋冬野的《安河桥》为题吧。 23年，回过头看来是一个小白摸索科研，不断试错入门的一年。22年因为疫情，所以学校12月底放假了。我记得当时穿着一身防护服回家，结果还是阳了\u003e_\u003c。但还好，有母亲在家照顾我，后来逐渐恢复了，母亲说想带我出去走走，我们便驱车来到万源八台山度过了元旦。 寒假这一个多月的时间，主要还是在做毕设，在空余时间基本读完了《别闹了，费曼先生》以及林奕含的《房思琪的初恋乐园》。我是是通过一个关于Feynman的访谈了解到此人的，该书通过讲述Richard Feynman的生平以及一些趣事，让我看到了一位物理学家的纯真以及那种展现出来的对周围生活的热爱与好奇！而林奕含的《房思琪的初恋》这本书，我是在上学校的《中外名著导读》课堂上了解到的，周老师说建议每位女生都应该读一读这本书，然而我也读了，读的过程中感到很悲痛，最后写了书评。 此外，我还在零碎时间听完了单田芳先生的评书《曾国藩》，这是我第一次听评书，所以还写了听后感。其实，最开始是在喜马拉雅上听《曾国藩家书》，但我觉得得先了解一下曾国藩，再去听家书会比较有体会，于是便找来了单老的评书听。通过家书以及曾国藩的生平，我学习到了很多为人为学处事的道理，不得不说曾国藩是自律的典范，是值得每个普通人学习的。 而寒假这段时间的作息，刚开始时还是按照以往在学校的习惯，23点睡6:30起，但由于得了新冠，后面就变成了早睡但7-8点之间起床了😅，再加上过年走亲访友的一些原因，早起读书便断断续续的，在家早读如果没有特殊原因，我一般是按照自己的兴趣来，先读半小时杨帅老师的背三句练习英语口语，再花半小时朗读杜甫的诗歌和老子的《道德经》。我很喜欢杜甫的诗，沉郁顿挫风格，豪迈大气的意境，深沉浓烈的感情，值得反复朗诵品味 在临近开学的那几天，我抽空回了趟绵阳，看了看南山中学，并和初高中同学见了见，四年来第一次相交，我感觉大家的境遇、变化都挺大的，通过这几次聊天，我也对自己未来的规划更加坚定了，在重庆的江北机场候机时，我写下了寒假以及绵阳行的总结——于我而言，研究生这三年，我想沉淀下来，追求学术，看自己是否适合做科研。 开学后，早读的功课换成了背三句和论语，从2月份一直到4月份，一直在忙毕设，抽空读完了《深度学习入门》，主要是想看看如何deep Learning from scratch😋。而对于这个毕设，现在看来感觉好trivial，只是在ITPruner上加了低秩分解，如果重来一遍，可能会按照导师说的用Mindspore重新实现一遍，虽然有风险，但要踏出舒适区，挑战自己可能做不到的事情，对能力的提升才会更大吧！并且就算最后实现不了，毕设也不会卡的，当时自己太求稳了T_T。但整个毕设还是有收获的，从最开始的文献调研找可改进的点，做实验，到最终完成毕业论文，可能这也算是一种科研训练吧？ 到5月份初答辩完，毕设的事情便暂时告一段落了。当时正碰上学院的党支部组织去嘉兴调研，于是我也报名去了。大学四年基本一直待在学校，如果再不出去看看感觉很可惜嘉兴，特别是月河古镇，给我一种江南水乡的怡人，当你踏入这里，她就像是一位亭亭玉立的佳人，在柳絮春风的伴随下，向你徐徐走来。 想象一下，在院子里泡上一壶茶，养养花，和老友谈天说地一个下午，是多么惬意。 从答辩完到6月份初这段时间，我每天主要是在忙科研以及改毕设文档，当时导师想让我继续做博文学长强化学习剪枝的实验，于是便找了很多资料去了解这方面的东西。当时还养成了一个习惯，午休结束，我会先花半小时先学学自己感兴趣的东西，然后开始工作，这个习惯一直持续了整个暑假。用这每天半小时的时间，我看完了Crash Course Computer Science，也算是对整个computer science有了一个浅层的全面的了解。 在6月份的第一个周末和好友去看了数字艺术与莫梵展。第二天，我只身一人坐动车去余姚拜访王阳明故居，因为中国传统文化对自己的影响挺大的，而王阳明作为心学的开创者，三不朽的圣人，所以我觉得很有必要去拜访一下。 当时有很多慕名而来的游客来拜访，还有一些阳明心学的学习班来故居参观学习，我感受到了中华优秀传统文化的复兴，绽放新的生机，发挥着她的时代价值，于国于民这是很好的事情。 到6月8号，导师跟说我先不做强化学习了，让我做接着做博文学长iccv被拒的知识蒸馏论文，于是我便开始看知识蒸馏这方面的东西。一直到7月份，期间经历了毕业典礼，还和大学的几个好朋友去西湖附近玩了一天也算是毕业旅行？ 在6月底，我报名参加了上海的Amazon云科技中国峰会，主要是想去看看企业究竟是在做些什么，听了几场报告下来。有两个感受一是大模型AIGC真是非常火，会场挤满了人，而像量子计算一些还未大规模实际应用的只有寥寥数人，二是现在的程序员学习工作方式需要转变，会更加注重思维的独创性。 在7月初，我去参加了立心营。立心营结束后，我开始做2030项目，7月中旬回家待了半个月，8月初便来MAC实验室了。来厦大以后，我的主要精力仍然是放在2030上，我们几个研一的，主要是做一些SFT数据集处理，peft微调等工作。 到9月份开学这段时间，我每天早上6点半起床，读1h英语，主要是练习口语和背GRE单词，记得刚来这边对厦大的环境不太熟悉，苦于找不到适合早读的地方，会偷偷溜到生命科学学院里去😂。但还好，后来我发现食堂二楼很适合早读，读完书之后便搭实验室班车去软件园开始工作。 那段时间的午课半小时，我开始在Coursera上学learning-how-to-learn，主要是想弄清楚如何科学有效地学习，毕竟从小到大学了这么习，好像还没认真思考过什么才是学习，如何学习？在零碎时间或者是摸鱼的时候，我会去学The Missing Semester of Your CS Education以及看看intermediate-python，前者因为我发现自己还是缺少很多cs通用的技能，而后者我想写出优雅的高质量的python代码，毕竟大部分时间都在使用python。在每周六周天，没有2030的任务时，我在学standford CS229以及mit18.100A，一方面是想给自己补补基础，另一方面对这些也有很大的passion。 9月份开学，我竞选了班级学委，主要是想举办类似读书会的活动，以讨论班的形式将一群热爱技术、科研的人聚集在一起，共同读一部书或者是论文探讨。因为觉得一个人学习很容易陷入局部最优，而一个团体能够扩大搜索范围，跳出局部最优。 而9月份这一个月的时间里，我除了上课，剩下的大部分时间还是在做2030，根据flageval上的各类指标，收集数据集，做peft微调，尝试提升llama模型的性能。对于厦大的研究生教学质量，真是一言难尽，绝大部分课都像是摆设，老师讲老师的，学生做自己的。而对于我来说，如果老师讲得好，课听的有收获我便会听，但大部分时间我也是在做自己的事情，不知道其他top高校的研究生教学是怎样的，真是很向往有大师的学校！ 到了10月份，博文师兄实习回来，我开始继续做丢了2个多月的知识蒸馏。主要是需要重新设计蒸馏算法，提高模型的性能，师兄这篇iccv之所以被拒，是因为审稿人diss实验效果还差点，虽然具有创新性和可解释性很强。 到10月中旬的时候，我去参加了PRCV2023，这也是我第一次参加学术会议，我最受益的是《高质量论文写作与发表论坛》，请了很多有名的教授谈科研与论文写作心得。其中印象最深的是浙江大学李玺教授说“科研是一个全链条优化的过程”，还有复旦大学张军平教授《高质量读研》，我利用零碎时间将这本书读完了，其中对我帮助最大是书中说”基础应该优先定义在对具体研究问题的前沿掌握上，以点带面地学习。“ 此外，徐宗本院士题为《变与不变：有关大模型的一些数理基础问题》让我意识到我们正处于大模型时代，而以前的数学理论在大规模数据集上并不完全适用，需要建立一套全新的数学理论来做大模型的基础研究。 从10月份到11月19日CVPR截止这段时间，我绝大部分时间都在做蒸馏实验，尝试了很多想法，但最后并没有达到理想的预期😂，师兄说设计新的蒸馏算法和原论文其实是独立的研究课题了，因为你知道一个东西是什么和知道如何让它变得更好是两码事。我感觉整个实验的过程，有点像抽奖碰运气，尝试的很多想法都没有根据，我认为有很大部分原因在于自己读论文太少了，对蒸馏的理解得还不够深入，在设计时可用的武器并不多。 投完cvpr到12月中旬这一个多月，我主要是在继续做导师之前一篇混合压缩的论文，在上面加各种CNN的KD算法，验证实验效果。最开始做的时候，跑1个epoch需要花2个多小时😓。尝试了各种加速的tricks，从数据加载到数据增强，结果发现提升并不明显，只快了0.5h，结果后来才断定是机器的问题，同一份代码，相同的配置，伟中在另外的机器上跑只需要几分钟/eopch。 此外，我和咏东组队做计算机语言学的课设，而咏东打算用他投IJCAI的论文拿去当课设，于是我帮着用open3d实现了论文中3D bounding box的可视化，本想找个现成的直接用因为感觉这个可视化挺普遍的，结果找遍全网都没有，所以只好自己写，做了很久最后都打算用PPT画了😂，但终于还是用代码实现了，打算后面整理下开源到github上。 23年月底最后一周时间则主要是在补之前欠下的课堂作业和准备期末复习了。有一门矩阵论的考试，我没想到老师会考作业中没有涉及到的知识点，于是100分的题目我只做了60多分，没做出来的都是我复习没看的，虽然平时也学了，但时间一久就忘了。当时考完后，突然对这种考试有些反感了，毕竟凭着对数学兴趣，自己平常在矩阵论上也花了不少时间。而且经历了从大学追求高绩点，到研究生以追求理解知识本质为主的转变。我认为如果你有比较强的考试突击能力，在短时间内把内容记住然后应用，也能够考很好的分数，而且它无法评估你是根据理解写出来的还是背出来的。我更想从数学中获取思想，如何解决问题的思维，而不是仅仅把数学当作一种工具吧。 以上梳理了23年以来的主要事件，自己在科研的道路上摸爬滚打，走的比较慢，但也比较沉稳，总之对我来说，做什么事情无论结果尽力而为即可。最后，再用数据总结下23年。 23年作息大概为，早读1h，9点到实验室工作到12点，去图书馆午休半小时后14点到实验室工作到17:30，晚上19:00工作到22点。日复一日，如果当天会去运动，17:00便会下班。除了1h早读外，我晚上喜欢去思源餐厅吃饭，在回来实验室的路上，听着《走遍美国》的录音，练习口语，我发现这是个很好的方法，因为回来有段路上基本没有人😂。 在生活方面，手机时间使用时间日均1h31min，23年总计502h20min。睡眠日均时间为7小时44min，一般是23点-23点半入睡，早上6点半-7点起。健康方面，干眼症还没有完全好，但按照番茄钟的间隔学习问题不大。运动主要是游泳和跑步健身，一般是隔天进行一次1h运动，毕业后打篮球很少了，主要是找不到球友呀~ 23年共完整读完/听完了8本书，分别是《高质量读研》、《别闹了，费曼先生》、《曾国藩家书》、《大学中庸》、《图解心经》、《深度学习入门》、《房思琪的初恋乐园》、《找出最初的你》，然后还有一些基本读完以及专业课用到读了大部分的书就不在此一一赘述啦，详见豆瓣。 在观影方面，23年看了4部电影，在寒假看了《饮食男女》、《花样年华》、《落水狗》，在来厦大的飞机上看完了《老人与枪》。我还是喜欢看以前经典的电影，几乎不去电影院。 在人文艺术方面，我喜欢利用零碎时间，例如坐班车、走路的时间听一些讲座，文史哲这些东西占了我精神世界中的很大部分，如果没有这些感觉自己就像个行尸样的工具人。基本听完了王德峰教授的《大学》、《道德经》、《中西思想必修课》、高华教授的《中华人民共和国史》、香港科技大学文化研究中心系列讲座《重读中华人民共和国史》，一方面是出于对中西方哲学的兴趣，另一方面想全面客观地了解自己所生活国家的历史。展览除了上面提到的数字艺术和莫奈，今年只看了校内的一个摄影展。 在音乐方面，听得最多的还是古典，最喜欢听肖邦以及巴赫，下面揭晓年度歌手和歌曲！ 总的来说，今年最大的事情还是读研吧，交到了很多厉害的朋友，我也逐渐适应读研的生活。自己还是比较喜欢目前的状态，做有意义、有价值的事情。 24年希望自己能做到以下： 生活 保持早睡早起的习惯，坚持健康第一位。 手机使用时间降低，控制在1h内 充分利用好零碎时间读书，并在晚上睡前能够争取看一会儿书 科研 转变科研学习的方式，降低看书和看课的比例，将主要的时间用在读论文做实验上，希望能做出自己的东西。 ","title":"2023 安河桥","uri":"/posts/2023_summary/"},{"content":"这学期选了一门矩阵论的课，其中有个作业是小组组队科普一些矩阵论的相关应用。我们组选了Harris Corner detection作为报告题目，我负责代码实现部分，花时间整理了下这方面的东西，感觉角点检测还是蛮有意思的，主要是没想到矩阵论在cv处理中还可以这么用。T_T 对于灰度图上某点，如果该点在进行微小移动后灰度变化很大，这意味着该点的亮度或颜色深浅变化显著。这种显著的灰度变化通常发生在图像中的角点corner。 “灰度”是指图像中每个像素点的亮度或颜色深浅。在数字图像处理中，灰度图是一种特殊的图像，其中每个像素仅包含灰度信息，而不包含颜色信息。灰度值通常是从0（纯黑）到255（纯白）的整数，表示不同的亮度级别。在代码中，我们通常将RGB三通道的像素值取平均，最后得到的单通道图像便为灰度图。 注意，上面所说的“微小的移动”是指在某个区域内沿任意方向移动均会引起灰度变化。以下图为例，在1区域想象有个滑动窗口从下往上，移动越过红线，这时也会引起灰度变化，那么是否能判断它就是角点呢？答案是否定的。 因为，滑动窗口在红框1的位置左右移动，并不会引起灰度变化。但这时如果我们考虑2区域这个交点，可以发现无论是上下或者左右移动均会引起灰度的变化，或者是沿2红框的对角线等各个方向均会引起较大的灰度变化，因此我们能够判断交点处为角点。 总的来说，角点检测从角点的定义入手，corner的定义为：在该点邻域的各个方向上移动均会引起较大的灰度值变化的点。 粗糙地介绍完了角点检测的原始思想，那如何对其进行数学上的形式化呢？从判断的方法描述中，我提到了可以使用窗口滑动前后灰度值的变化作为判断角点的准则，因此我们可以定义一个表示窗口内灰度值变化的差值函数Error function$E(u,v)$如下 $$ E(u,v)=\\sum_{x,y}w(x,y)[I(x+u,y+v)-I(x,y)]^2 \\tag{1} $$ 其中$w(x,y)$表示窗口函数，对该点的每个像素点均赋予权值，一般取矩形窗口或者高斯窗口，前者对窗口内的值取1，后者按照高斯分布取值。$I(x+u,y+v)$表示窗口沿u和v平移后的该点的灰度值，$I(x,y)$表示平移前该点的灰度值。求和符号表示对窗口内的所有像素点计算灰度值的变化。 接下来，我们需要对函数$E(u,v)$进行一些化简，首先将$I(x+u,y+v)$在点$(x,y)$处进行一阶Taylor展开，得到下式： $$ E(u,v) \\approx \\sum_{x,y}w(x,y)[I(x,y)+I_xu+I_yv-I(x,y)]^2 \\tag{2} $$ 其中$I_x,I_y$分别表示在点$(x,y)$处的沿$x$和$y$方向的一阶偏导。于是，我们便可以消掉$I(x,y)$，将平方拿进去后得到$I(x,y)$的二次型，那么，很自然地我们会想到把这个二次型写成矩阵的形式，最终的化简结果如下： $$ E(u,v) \\approx [u\\quad v]M\\begin{bmatrix}u\\\\v\\end{bmatrix} \\tag{3} $$ 其中矩阵$M$也被称为结构张量structure tensor $$ M=\\sum_{x,y}w(x,y)\\begin{bmatrix}I_xI_x\u0026I_xI_y \\\\ I_xI_y\u0026I_yI_y\\end{bmatrix} \\tag{4} $$ 可以发现差值函数的大小主要取决于$M$的大小，例如，对于开头例子中的1,2区域来说，在滑动窗口移动相同的距离即$u,v$相同的情况下，能检测到区域2中包含角点的原因为是$M$较大。 那么如何来度量$M$对$E$的贡献，从而判断是否存在角点呢？Harris 告诉我们可以使用如下式子来判断某个区域内是否存在corner $$ \\begin{aligned}R=\\det(M)-k\\operatorname{tr}(M)^2.\\end{aligned} \\tag{5} $$ 由于$\\det(M)=\\lambda_{1}\\lambda_{2}$并且$\\operatorname{tr}(M) = \\lambda_{1} + \\lambda_{2}$，其中$\\lambda_{1}\\lambda_{2}$分别是矩阵$M$的特征值，于是上式可以进一步展开为： $$ R=\\lambda_1\\lambda_2-k\\left(\\lambda_1+\\lambda_2\\right)^2. \\tag{6} $$ 其中$k$是常数，一般取到$[0.04,0.06]$之间 The so-called Harris Corner Detector was introduced by Chris Harris and Mike Stephens in 1988 in the paper “A Combined Corner and Edge Detector”. 因此，我们可以根据结构张量的特征值大小来判断是否包含corner，下图非常形象地说明了这一点： 当$\\lambda_1\\approx\\lambda_2$，且都比较大时$R$会比较大，这时可判断存在corner；当$\\lambda_1 \\gg \\lambda_2$，$R \u003c 0$，存在edge；当二者都比较小时，$|R|$较很小，不存在edge或者corner。 其实，根据$\\lambda_1\\lambda_2$的大小来判断差值函数 $E$ 的大小，从而判断是否存在corner还可以从下面这番推导中也可理解。 由于$M$是一个实对称矩阵，属于正规矩阵，因此$M$酉相似于对角矩阵，且相似变换矩阵$P$为正交矩阵。 我们将$M$相似对角化后带入等式3后，可以得到如下式子 $$ E(u,v)=[u, v]P[\\begin{matrix}\\lambda_{1}\u00260\\\\0\u0026\\lambda_{2}\\end{matrix}]P^{T}[u,v]^T \\tag{7} $$ 其中$\\lambda_{1},\\lambda_{2}$分别为$M$的特征值。由于$P$为正交矩阵，当它与向量相乘，相对于对该向量进行旋转或者反射，因此我们可以把上式写成如下形式： $$ E(u,v)=[u', v'][\\begin{matrix}\\lambda_{1}\u00260\\\\0\u0026\\lambda_{2}\\end{matrix}][u',v']^T \\\\ =\\frac{(u^{\\prime})^{2}}{\\frac{1}{\\lambda_{1}}}+\\frac{(v^{\\prime})^{2}}{\\frac{1}{\\lambda_{2}}} \\tag{8} $$ 从几何上，$E(u,v)$可以看作对直角坐标系进行旋转后的一个中心仍在原点的椭圆，如下图。 显然，根据式子8，我们便能很清晰地理解如何通过$\\lambda_1\\lambda_2$的大小来判断是否存在corner了。 实现代码网络上有很多，在此给个pseudo-code做参考 def harris_corner_detection(image, k, window_size, threshold, border): # 1. Convert to grayscale gray_image = convert_to_grayscale(image) # 2. Compute gradients in x and y directions img_gx = compute_gradient_x(gray_image) img_gy = compute_gradient_y(gray_image) # 3. Compute products of gradients sq_img_gx = img_gx * img_gx sq_img_gy = img_gy * img_gy img_gx_gy = img_gx * img_gy # 4. Apply Gaussian smoothing sq_img_gx = gaussian_smooth(sq_img_gx, window_size) sq_img_gy = gaussian_smooth(sq_img_gy, window_size) img_gx_gy = gaussian_smooth(img_gx_gy, window_size) # 5. Compute corner response for each pixel corner_response = compute_corner_response(sq_img_gx, sq_img_gy, img_gx_gy, k) # 6. Apply thresholding and non-maximum suppression corners = threshold_and_non_maximum_suppression(corner_response, threshold, window_size) # 7. Mark corners on the original image marked_image = mark_corners(image, corners, border) return marked_image Reference Harris Corner Detection Explained Robert Collins, CSE486, Penn State 16-385 Computer Vision (Kris Kitani), Carnegie Mellon University harris corner detection(角点检测) A COMBINED CORNER AND EDGE DETECTOR ","title":"An Application in Matrix Theory:Harris Corner Detection","uri":"/posts/harris_corner_detection/"},{"content":"今天上80服务器跑mdistiller的代码时，意外发现torch、numpy都不能用了T_T 导入torch、numpy库时出现如下报错情况 sh: 0: getcwd() failed: No such file or directory Intel MKL FATAL ERROR: Cannot load /home/jyg/anaconda3/envs/mdisPy37/lib/python3.7/site-packa ges/torch/lib/../../../../libmkl_core.so. Intel MKL FATAL ERROR: Cannot load /home/jyg/anaconda3/envs/mdisPy37/lib/python3.7/site-packa ges/mkl/../../../libmkl_rt.so.1. 我们先看看报错信息，这个报错来自Inter MKL。Inter MKL全称是The Intel Math Kernel Library，它是一个主要是用于科学计算的共享库，提供了很多与数学优化程序，例如向量矩阵操作什么的。 报错信息说明我们在导入torch或numpy库时，无法载入libmkl_core.so.和libmkl_rt.so.1. 这两个文件以so结尾，属于共享库文件。 在Linux系统上一般以.so文件扩展名(shared object), 在MacOS上以.dylib为文件扩展名, 在Windows上以.dll (dynamic link library)为文件扩展名。 共享库的出现的一个重要原因是防止重复造轮子，它允许多个程序使用同一份代码。 这样程序里面便不需要重复写相同的代码，只需要让程序指向共享库即可，提高了程序的可复用性，也让程序变得更modular了。 从报错信息来看，它说我们无法载入某个文件。首先想到的是先确定这个文件是否存在，这里以libmkl_rt.so.1.来进行分析。 从我的机器上运行结果来看，libmkl_rt.so.1.确实存在。 那么如何让numpy或者torch库能够正确的找到Inter MKL共享库并载入它需要的共享文件呢？ 这就不得不说一下LD_LIBRARY_PATH环境变量了。 LD_LIBRARY_PATH是Linux系统上一个与动态链接有关的环境变量。如果将各个程序想象成大小不一的拼图，那么链接的过程就是将这些杂乱的拼图正确地拼合起来。 当某个库或者程序需要用到其他的共享库时，在搜索标准库目录，例如/lib或者/usr/lib之前，操作系统会首先从由LD_LIBRARY_PATH指定路径下进行搜索。 因此，我们只需要将路径/home/jyg/anaconda3/envs/mdisPy37/lib添加到LD_LIBRARY_PATH即可，即执行如下命令 export LD_LIBRARY_PATH=/home/jyg/anaconda3/envs/mdisPy37/l ib:$LD_LIBRARY_PATH 现在便能正常导入numpy或者torch库了 不要忘了，我们现在只是在当前session中临时设置了LD_LIBRARY_PATH的值，如果当前会话结束了，重新开一个会话时还需要重新export。 因此，我们可以考虑执行如下命令永久改变LD_LIBRARY_PATH的值 echo \"export LD_LIBRARY_PATH=/home/jyg/anaconda3/envs/mdisPy37/lib:$LD_LIBRARY_PATH\" \u003e\u003e ~/.bashrc source ~/.bashrc 写到这里，作者想到，既然当某个程序需要用到其他共享库时，Linux操作系统会首先从由LD_LIBRARY_PATH指定路径下进行搜索，那我们可以考虑将本次报错的解决方法进行推广，如果共享库文件abc.so无法正常加载，且该共享文件存在，其所在目录为/path/，那么我们便可以尝试使用如下命令进行解决： export LD_LIBRARY_PATH=/path/:$LD_LIBRARY_PATH ","title":"报错Cannot load *.so可能通用的解决方法","uri":"/posts/solution_cannot_load_so/"},{"content":"\n梅贻琦先生有句名言：“所谓大学之大，非有大楼之谓也，乃有大师之谓也。”实际上，我们并没有对“大师”做出一个统一标准的定义，人人心中都有自己的大师。但我认为大师讲课至少会给人以启发和深思。\n研一开学，厦门大学信息学院前院长周昌乐教授为我们做了题为《信息学科的大学之道》的讲座，回答了我最近思考的一些问题，例如面对ChatGPT等信息技术的冲击，什么才是教育中最重要的？至少从某种程度上知识已经不重要了。教育的目的是使人成才，那么未来人才需要具备哪些特质呢？\n听完整个讲座，我对上述问题有了一些答案，对讲座的大致内容以及我的思考记录如下。\n首先，周老师先提出了信息学科的三点培养目标。\n一与二是对学问上的要求，即我们不仅需要了解本学科的基本知识和前沿，还能够拓宽自己的知识面，了解交叉学科的内容，不然学问容易死水一潭。3是对研究者道德修养上的要求，一流的学者志存高远，做有价值、有影响力的研究，而不是为了发论文而一味灌水。\n说到这，浙江大学校长竺可桢的一段话我也很赞同，在今天看来也颇有价值。\n我们受高等教育的人，必须有明辨是非、静观得失、缜密思虑、不肯盲从的习惯，然后在学时方不致害己累人，出而立身处世方能不负所学。大学所施的教育，本来不是供给传授现成的智识，而重在开辟基本的途径，提示获得知识的方法，并且培养学生研究批判和反省的精神，以期学者有自动求智和不断研究的能力。\n——国立浙江大学校长竺可桢 1936年4月25日\n谈到交叉时，周老师说理工科和文科的老师们互相看不起，以至于老死不相往来。我突然想起来高中数学老师举的一个例子，说一对情侣去看海，学文的女生会感叹海面的广阔，海风的温柔，而学理工的男生心里只会想这有什么浪漫，不就是水、风嘛😂。这样看来，老师们互相看不起的原因大概是不同学科看待世界的方法不同。那么在文理之外是否存在第三种文化，能够沟通文理呢？对于这个问题，老师向我们推荐了一本书《第三种文化》。\n而信息技术对社会的冲击和变革，周老师总结为以下三点\n对于第一点，现代社会中常常出现父母与儿女对簿公堂，百分之七十五的人处于心理亚健康。而这些问题的解决都有赖于建立全新的道德价值体系。而对于第三点则体现在互联网、高铁飞机的出现使人与人之间变得很短很短。\n那么人类职业分布是什么样的呢？\n对于从业者的组成，周老师借鉴了国家的作用—21世纪的资本主义前景一书中的观点，该书是作者40年前对未来生活的预见，在此看来非常具有前瞻性。\n按照美国学者罗伯特• 赖克的观点，以知识经济为主导的社会，除了公共事业的从业者之外，社会职业人员主要分为如下三类：传统生产人员、直接服务人员以及符号分析人员（知识创新人员）。\n而对于未来职业的变化和轮替，周老师向我们推荐了另一本书《百岁人生》，这本书中交代了一个基本事实：21世纪初出生的人有一半的概率活到100岁，这样看来，过去的受教育—工作—退休三阶段人生模式已不再适用，终身学习将成为常态。此外，许多职业传统职业将消失。\n《百岁人生》作者指出：“ 接下来的几十年中，随着一些传统职业的消失和新型职业的出现，劳动力市场将出现大幅变动。。。。展望未来，随着后台处理、销售租市场营销、办公室管理和行政等各种工作被机器人和人工智能即取代， 这种变动将持续下去。”\n写到这里，读者想必能够猜到周老师的讲座风格，即他会将自己看过的书列出来，结合着书里的观点去讲他的观点，这样听完他的讲座，你会发现要读的书可太多了😭。\n什么是机器难以取代的职业呢？在回答这个问题之前，我们先看看什么是机器所没有的吧，周老师认为情感、自我意识、以及创造创新能力是机器目前最缺乏的，也就是说在这三方面的领域上，我们是胜过机器的，既然如此，这三方面的能力便需要着重培养提升了。\n《百岁人生》作者指出：“技术发展后能够幸存的工作有两类：一类是人类拥有绝对优势的工作，一类是人类具有相对优势的工作。\n我们先来看一下如何培养创新能力吧，周老师以中国的五行为喻，给出了自己的看法。\n创新能力的培养有赖于抽象思维、艺术审美、系统综合、科学实验以及团队沟通五维提升。\n抽象思维要求我们具有一定的理解能力，比如我们在设计数据库时，基于对客户需求的理解，通过构建E-R图进行建模。因为我们能够理解，所以我们可以对现实生活中的事物产生共情。而对于一项复杂的工作而言，往往是需要由一个团队共同完成，便需要提高团队沟通能力。\n而在做实验，产生新的知识的过程中，需要大胆地假设、小心地求证，培养科学精神，提高科学实验的能力。也正因为我们能够理解，所以可以感受。艺术家是最具有creativity的职业，我们需要提高艺术审美，产从而生更多新的想法。除了这四维能力外，系统综合能力也很重要，比如，软件系统架构师拿到的报酬远远高于只会开发的码农。\n情感和自我意识其实都可以归结到修养能力的培养。孔门心法《中庸》中有一段话是这样的。\n喜怒哀乐之未发，谓之中；发而皆中节，谓之和。中也者，天下之大本也；和也者，天下之达道也。致中和，天地位焉，万物育焉。\n也就是说人的情感需要达到“皆中节”，天地万物才能长久。但人往往是爱之欲其生，恨之欲其死，而这需要通过提高修养能力来改善。\n当人有了自我意识时，往往会着相，执着于自己这个小我中，以及想着通过自己的力量能够征服自然。但现代人诸多的心理健康问题，例如焦虑、抑郁基本都是因为无法摆脱小我，新冠疫情、突发的洪涝灾害更是显示了人类的渺小。所以，佛家教我们去我执。下面这首诗很能够说明执着于小我之人的状态。\n急急忙忙苦追求，寒寒暖暖度春秋。\n朝朝暮暮营家计，昧昧昏昏为己谋。\n是是非非何日了，烦烦恼恼几时休。\n明明白白一条路，万万千千不肯修。\n—《醒世诗》明.罗洪先\n总结来说，修养能力的培养体现在人能够处理好与自己的关系、与他人的关系、与自然万物的关系。\n上面讲了我对修养能力培养重要性的认识，让我们看一下周老师为什么会重视修养能力的培养。\n如何培养修养能力呢？对于中国人来说，我们应该读安身立命之书。例如《大学》、《中庸》、《论语》等。正如象山先生所说：”学道以圣贤为师，圣贤遗书，万世标的也。“\n但要注意的是，修养能力的培养不仅需要先从书本上获得知识，还需要在实际生活中进行实践体会。在此，周老师将《大学》中的八条目进一步扩展，提出了修仁智心的三个步骤，即知道、达道、行道。\n在修养能力的培养上，周老师着重讲了儒家经典，这确实是必不可少的基础。我个人认为道家、佛家的书也是值得一读的，对于培养修养能力也是有裨益的，儒家与另外两家的作用类似于操作系统与应用软件的关系。而这三家的作用，复旦大学王德峰教授总结得很精辟。\n儒家教我们“拿得起”，道家教我们“放得下”，佛家教我们“想得开”。——王德峰\n关于讲座的讨论到此为止。讲座后，我加了周老师的微信，表示我听完讲座后非常感叹与收获。通过老师的微信，发现周老师还会弹古琴，真是一位有趣的人。😄\n后来，我还去参加了老师开设的乐易读书会，活动致力于化导民众的健康幸福生活、提升民众的优良心理品质，其宗旨是：“读圣贤书、明科学理、修仁智心”。在我看来，这是一件很有意义的事情，因为我感觉大学教授与学术研究其实是离普通大众很遥远的东西。但当他退休，不再以学术为中心了，而投入到帮助民众中，也何尝不是一件好事呢？我想这也是周老师微信个性签名：“为民播撒恺悌情”的含义吧。🤔\n","title":"信息学科的大学之道","uri":"/posts/higher_education_of_computer_science/"},{"content":"I have been developing 2030 project almost more than one month. I primarily focus on analysing and cleaning data. Recently, I’ve delved into some advanced work about LLM. Specifically, I use LoRA to fine-tune Chinese-Llama-2-7b. In the beginning, five postgraduates were working on similar tasks as mine on different dataset. Sometimes, serval Ph.D students also use the same server. However, we only have 8 NVIDIA A800 on the server for fine-tuning LLM. It is quite annoying to see available GPUs slip away simply because we were slightly slow in executing commands. Therefore, efficiently securing enough GPUs under limited resources becomes crucial. In summary, my goal is to design a Python program that can help me grab available GPUs and once I acquire $n$ GPUs, then start running the real program. Before delving into the solution, I’d like to share something else. Creating a program to grab GPUs aligns with the first of the Three Virtues of a Programmer — Laziness. This is because automated GPU allocation saves me more time and energy compared to do it manually. Moreover, automation enhances efficiency and accuracy. The process of automating tasks is also a great way to hone my programming skills. Now, let’s delve into the source codes and briefly discuss the main idea. To grab GPUs, we first need to gather the information about GPUs. For this, I leverage the Python libaray subprocess to execute the nvidia-smi command, which provides details about GPU status. The get_gpu_mem function retrieves the memory of a specified GPU while get_free_gpus returns available GPUs as a list. def get_gpu_mem(gpu_id): gpu_query = subprocess.check_output(['nvidia-smi', '--query-gpu=memory.used', '--format=csv,nounits,noheader']) gpu_memory = [int(x) for x in gpu_query.decode('utf-8').split('\\n')[:-1]] return gpu_memory[gpu_id] def get_free_gpus()-\u003elist: gpu_query = subprocess.check_output(['nvidia-smi', '--query-gpu=memory.used', '--format=csv,nounits,noheader']) gpu_memory = [int(x) for x in gpu_query.decode('utf-8').split('\\n')[:-1]] free_gpus = [i for i, mem in enumerate(gpu_memory) if mem \u003c 100] return free_gpus So, how to occupy available GPUs ? I employ Python’s multiprocessing library to achieve this. If there are $n$ avaible GPUs, $n$ subprocesses will their own GPU. In the main process for-loop, the update rate of the occupy_num variable lags far behind the actual code execution. As a result, the occupy_all_gpus function spawns numerous subprocesses. In fact, the total number of subprocesses exceeds $n$ . However, thanks to the Lock mechanism, only $n$ subprocesses get to occupy GPUs and grab GPUs orderly. To occupy a GPU essentially means claiming its memory. In the occupy_gpu function, I generate a high-dimensional torch tensor on the designated GPU and then make the subprocess enter a sleep state. def occupy_gpu(gpu_id:int, n, occupy_num, ocpy_gpus, lock, a_dim=100000): with lock: if get_gpu_mem(gpu_id) \u003c 100 and occupy_num.value \u003c n: import torch a = torch.ones((a_dim,a_dim)).cuda(gpu_id) ocpy_gpus[occupy_num.value]= gpu_id occupy_num.value += 1 print(f\"Occupying GPU {gpu_id}, Total Occupied: {occupy_num.value}\") while True: time.sleep(10) def occupy_all_gpus(n:int, occupy_num, ocpy_gpus, interval=10): print(\"Launching process to occupy GPU ...\") lock = Lock() processes = [] #List to store the processes while occupy_num.value \u003c n: free_gpus = get_free_gpus() will_occupy_num = min(n, max(0,len(free_gpus))) for i in range(will_occupy_num): if occupy_num.value \u003c n: p = Process(target=occupy_gpu, args=(free_gpus[i], n, occupy_num, ocpy_gpus, lock)) p.start() processes.append(p) time.sleep(interval) # enough time to occupy gpus and update nvidia-smi return processes, ocpy_gpus With that, I conclude the introduction to the mechanism of occupying GPUs ends. Once we’ve occupy $n$ GPUs, it`s time to run our real program. However, before that, we need to terminate all the subprocesses. def run_my_program(n, desired_script, processes, ocpy_gpus, occupy_num): for p in processes: p.terminate() ocpy_gpus_list = list(ocpy_gpus[:occupy_num.value]) cuda_visible_devices = \",\".join(map(str, ocpy_gpus_list)) os.environ['CUDA_VISIBLE_DEVICES'] = cuda_visible_devices subprocess.run([desired_script, str(n)]) In a nutshell, the core of my solution is employing Python multiprocessing to occupy GPUs memory. The source code is available for download here. I developed it using Python 3.11. You can run the script by executing the following command. python grab_gpu.py --n 3 --otime 30 --spath ./train.sh I finish the whole work from programming to polish this blog by the help of chatGPT. The capabilities of this tool have profoundly transformed my academic and personal life. The more I engage with it, the more I feel can’t live without it. This evokes mixed feelings. While I’m elated witnessing the moumental strides AI is making to better our lives, the sheer potency of AI instills a lingering apprehension that one day, AI might spiral out of our control.🤔 The emergence of tools like chatGPT prompts reflection on topics such as the essence of human learning and the evolving nature of a programmer’s role. Recently, I’ve been reading The Art of Unix Programming.\" Inspired by its title, I’ve chosen to name my blog The Art of GPU Occupation.😁 Hope this blog can help you and if you have any questions or insights, I welcome a hearty discussion! 😆 ","title":"The Art of GPU Occupation","uri":"/posts/the_art_of_gpu_occupation/"},{"content":"我于2023年7月5日-7月9日在杭州桐庐志心书院参加为期5天的青年立心营，有些感想，遂成此文。 我是在大三上的幸福学课上知道志心书院的，当时课堂的实践作业选项之一是来志心当志愿者。但由于疫情以及个人时间冲突等缘故，我直到2023年暑期才参与了此次活动。 而参加该活动的原因在于我想来体验当代是如何弘扬传统文化的。我本身是对传统文化是比较感兴趣的，在平日繁忙的科研任务中，我总会见缝插针地听一些相关的讲座。那么现实中的传统文化名家讲课又是如何的呢？类似书院般的活动又会给带来些不一样的体会呢？这些问题我都挺好奇的，希望能从这次活动中找到一些答案。 7.5上午，在晨读、早餐之后，我们来到教室举行了释菜礼，向先师孔子行奠祭之礼，以表示入学。 举行完释菜礼之后，中央社会主义学院副教授李勇刚老师作了题为《传统文化学习交流》的分享。 李老师首先回顾了自己学习传统文化的相关经历，在这个过程中，李老师就像一位久违的老友，细数着学习儒家思想的历程，向你娓娓道来。 李老师提到自己以前去新疆支教时，向孩子们教授《三字经》、《千字文》等儒家经典，偶一早，忽闻操场上孩子们自发朗诵经典之声，不禁潸然泪下。又如在博士论文的选题上掰赢执拗的北大某老教授，作春秋公羊学论文。07年去给干部讲儒家经典课时，课没上到一半便以“传播封建糟粕”的理由被赶出来。在他叙述的过程中，我感受到李老师对经典的喜爱与当时求学和为学的艰辛。 老师对儒学是比较推崇的，他认为儒释道三家其实是不对等，儒家是另外两家的基础，就像儒家扮演了操作系统的角色，其他学说只是操作系统上的应用程序。 接着，李老师讲解了马克思主义，解释了为什么只有马克思主义能解决中国人“一盘散沙”的问题，详细地论述了马克思主义其实是和中华传统文化是相通的，比如马克思认为“人是一切社会关系的总和”与儒家的“三纲五常”是相联系的。 最后，李老师抽丝剥茧地分析了习主席在6.2文化传承发展座谈会上的讲话，在看似普通的官方话语中饱含深层逻辑和含义，看得出党和国家对文化的传承发展高度重视，如今中华传统文化正在神州大地上复苏。 下午，北大法学学士、港中文文学和历史学双硕士曹玉骞老师为我们作了《读万卷书、行万里路》的分享。 从曹老师的分享中，使我明白，万卷书和万里路其实都不重要，重要的是你能够驾驭你的心，达到读万卷书和行万里路的目的即可，而不是被这些浮在表面的形式牵着鼻子走。比如六祖惠能是个文盲，不识字，没读过书；伟大的哲学家康德一辈子都没离开过他的家乡。但二人都是大成就者。 晚上，华南农业大学国学院副院长唐元平老师结合自己的经历为我们作了《儒家中的“孝”》的分享。 唐老师声称自己已诵读过上千遍论语，且对钱穆先生十分推崇。我翻了下我做的笔记，似乎我从讲课的内容没有学到比较新或者重要的东西，但老师提了两个建议我觉得对我还蛮重要的。一是建议我们读一读钱穆的《论语新解》能够对论语会通，杨伯峻的《论语译注》只是翻译罢了。二是活的久、保持身体健康很重要，不要熬夜，什么事都可以留到明天做😉。 7.6上午，浙江省儒学学会常理事兼秘书长，浙江工商大学副教授王晓平老师为我们作了《在儒学的天空下，追寻中国梦》的分享。 王老师讲的很贴近生活，她通过分析儒家经典，为我们在生活中如何交朋友、谈恋爱、教育等方面提了很多实用的建议。此外，她关于儒家经典的一些独创性的阐述很有意思，比如在当今社会，独善其身和兼济天下其实是都需要的，有的人企业做的很好，但家庭关系处理很差。 下午，安徽秋浦书院院长姚舜雨老师为我们作了《文庙释奠礼的历史沿革》的讲座。 姚老师从商周时代讲起，贯穿到明清时期，整个讲座很偏向于考据学，但我并是很有兴趣，再加上在书院总是睡不好，于是😴。。。但姚老师本人很有魅力，酷爱读书，藏书有三千多本，和他聊天非常有意思，讲起话来滔滔不绝，老师似乎什么都知道，如同一本行走的百科，很有古代文人之风。 7.7上午，孔子第78代孙，曲阜孔子书院院长孔众先生为我们作了《生命觉者 大学之道》的分享。 孔众先生非常平易近人，他很喜欢和同学们互动，他总是走下讲台，来到学生们中间，和同学讨论互动。我认为孔众先生想告诉我们核心的一点是，莫向外求，要回归本心，通过学习圣贤智慧，找到对生命的信心和自己的信仰，明心见性，找到自己的本来面目、本真。 下午，主要是邀请了两位受传统文化影响较深的企业家、孔众先生、学生进行提问和讨论，问题和回答在此便不一一列举了。 晚上，北京大学经典与文明研究中心秘书长戴熙宁老师为我们作了《中国式现代化的文明机理》，戴老师在论述观点时非常有逻辑性，思维十分缜密，给我一种理科出身的文科生的感觉。对于那些我感兴趣的部分，我都聚精会神地听着，生怕有漏掉而跟不上他的节奏。 戴老师从西方的文明讲起，到中华文明，并将二者进行对比。在最后讨论中华文明时，特别是关于儒家思想部分，他提出了一个模型，来说明儒家思想具有包容性，进而表明整个中华文明能够吸收外来文化，海纳百川，为我所用。 此外，戴老师还提到量子物理不同于牛顿所构建的科学体系，其背后的哲学思想是与中华文化相契合的。 7.8上午北京大学耕读社第六任社长吴庆前老师为我们进行了授课。 吴老师讲课没有主题，他首先简单介绍了一下自己的求学和工作情况，然后让同学们提问题，他进行回答，课堂相关或者不相关的问题都行😃。据说吴老师以前在北大求学时，他的老师授课方式便是如此。 吴老师的求学经历让我感到很惊讶，本科复旦力学-\u003e北大外国哲学硕-\u003e北大国学博-\u003e清华经济管理学博后。于是，我向他提问如何看待通才和专才？老师的建议是由专到通，但你在成为专才后，可能会变得不愿意舍弃已有的，去探索新领域，因为你已被贴上标签。 吴老师目前是跟着某院士研究量子计算背后的哲学思想，因此，有位同学问到有关量子计算机的问题，吴老师提到量子计算机有非常大的发展潜力。比如像GPT4的训练是非常耗时的，而量子计算的成功应用能够使训练时间缩小几百倍。 还记得半个月前去Amazon的中国云峰会上听量子计算的讲座，Amazon的量子计算科学家讲到，量子计算是一种利用量子力学的计算模式，它为我们解决问题提供了一种新的方式。比如，在一张纸上的两点，通常我们认为两点直线距离是最短的，但如果我们将这张纸对折，两个点的距离可能就为0两点重合，而量子计算需要解决的就是类似如何将这张纸对折。 下午主要邀请了从传统文化走上自学中医的柯召民医生和有近12年公益领域从业经验的武潇老师结合自身经历做了分享。 柯老师力荐《伤寒论》这本书，认为学精此书，水平可以超过外面百分之八十的中医，号召同学们“立命”从自学中医开始，听完他的讲座，我还真想在课余时间去学学中医，至少掌握一些医学常识是必须的，说不定哪天能派上用场。😇 武老师则是从自身做公益的经历出发，向同学们展现了如何实践、活出传统文化的价值和精神。 7.9上午浙江当代中国画研究院院士徐玉武老师为我们作了《古代审美与现代审美》的讲座。 徐老师农村出身，从小喜欢画画，听他说小时候穷，买不起笔墨，便用树枝在地上作画。他40多岁才去中国美院进修，属于大器晚成。从徐老身上，我明白了学东西讲求“欲速则不达”，慢慢来。热爱书画寿命普遍较长，因为有助于排遣心中的压制的情绪😯。 徐老给我一种汪曾祺的感觉，在他身上，我似乎看见了自己向往的中老年生活，游于艺，做一个画家，徜徉于山水自然之中，写花写鸟，画花画鸟，何乐而不为呢？ 下午音乐家何怡老师，为我们做了《现代人心中的那片竹林》的讲座，主要介绍了中国琴歌的发展历史，并现场进行弹唱了苏轼的《定风波》、李白的《秋风词》等。 在老师弹唱的过程，我一直是闭上眼去享受琴歌之美。记得自己从初中开始就很喜欢朗诵古文、诗词，不仅仅是因为词章押韵，还因为古文诗词所传达的文人深沉的情感、那是这些作品内在的灵魂。而老师用琴歌弹唱的形式，将古代诗词演绎出来，真是太美了。正如老师在开篇所说，“琴歌是一片心底的竹林，可以让心停靠，给人宗教放的虔诚冥想、哲学上的冷静沉思。” 在整个参加过程中，我也在思考未来我想做的工作以及以这种模式弘扬传统文化能够达到怎样的效果？ 总的来说，经过此次活动，自己的目标更加清晰，仍是将传统文化当作个人修身养性的方式，主体还是做计算机科学方面的研究。 因为相较于像讲课老师那样全身心投入中国哲学研究与弘扬，我是更喜欢做计算机研究工作的。一方面，在做研究的过程中，我总想去动手做些什么，例如写代码。另一方面，学科的深度和有趣性也是吸引我努力去做的。此外，我发现各位老师共同点在于均实现了经济上的独立。所以，可能当我有所成就，有余力时会去弘扬吧，这样或许也能够会影响更多人。 但我和老师们也有共通之处，即我们都认为学问和道德修养都需要共同发展、提升，不同之处在于老师们的学问主要是中国哲学，而我主要是计算机科学罢了。 而将我们连接在一起的则是中国哲学，我们都希望能够弘扬中华优秀传统文化，从中国哲学中汲取力量，使得国人能够获得精神上的独立。 而对于这种弘扬传统文化，传播儒家思想的夏令营式的模式，我认为有利也有弊，很难做到尽善尽美，在活动的过程中，有人愤然离去，也有人乐此不疲。 但至少有一点我觉得很好，这次活动让人感到在传统文化面前人人平等，没有尊卑贵贱。不管你是复旦、武大名校博士生，还是职业学院的本科生，不管你是老师，还是学生，大家都能够像朋友般坦诚地讨论问题，互相帮助，其乐融融。 ","title":"癸卯年志心青年立心营纪录与感想","uri":"/posts/zhixin-academy-2023summer/"},{"content":"大学毕业了，四年的时光仅在弹指之间。\n毕业这天真正来临时，自己并没有像电影情节中哭的稀里哗啦的，那样感情爆发，只是很平和地面对这一切，人生的常态大概就是如此吧，人来人往。\n当我参加毕业典礼，坐在位子上回顾大学四年时，她主要教会、培养了我两样，一是求知欲和独立的思考，二是做一个感恩、向善的人。\n可你究竟是平静如湖水吗？当潮水退去，你进入新的环境，遇到新的人事物，和以前的不同了，或许才会使你感到大学的可贵与美好，人总是失去后才懂得珍惜。\n人有悲欢离合，月有阴晴圆缺。保持一种乐观、平和的心态，坦然以对就好。\n大学毕业，大家各有各的路要走，没有什么好牵挂的，各自开拓、闯荡吧！\n《再见》——张震岳\n我怕我没有机会\n跟你说一声再见\n因为也许就再也见不到你\n明天我要离开\n熟悉的地方和你\n要分离\n我眼泪就掉下去\n我会牢牢记住你的脸\n我会珍惜你给的思念\n这些日子在我心中永远都不会抹去\n我不能答应你\n我是否会再回来\n不回头\n不回头地走下去\n2023 年 6 月 17 日 星期六 雨\n蒋易耕 于计算机学院10-631\n","title":"毕业了","uri":"/posts/graduate-from-zstu/"},{"content":"今年3月份的时候，和朋友约好去看莫奈、梵高与现代主义大师真迹展下文以莫梵展简称但由于忙毕设和其他事情，所以一直没有去。\n恰好前几天比较有空，并且6月2日博物馆还推出了看展享免费古典乐演奏的体验，于是决定当天去了。\n既然好不容易出来一趟，只看一个展怎么能够呢？^.^因此，我和朋友决定先去看非孪生主义数字艺术联展下文以数字艺术展简称，然后再去看莫奈。\n我对人文艺术的兴趣似乎是天生的，记得上小学的时候就喜欢在书上的插画上进行涂画，和班上的同学比较看谁画的小人更生动。在外面补完课，常常去新华书店看书。每晚睡觉前，通常会喝着牛奶看会书再睡。\n后来上了初中、高中绘画似乎莫名中断了，但读课外书的习惯一直保持着。\n进入大学，有了更多属于自己的时间，当我闲下来，又开始读起课外书来。串寝时，看见zgf的书架上有本王小波的《黄金时代》，便借来一阅。\n在读王小波《黄金时代》的过程中，我彻底被王小波以及他的文字所征服。读完这本书，我便迫不及待地读他的其他书，特别是那些能够展露他的才华和思想的著作，例如《沉默的大多数》、《我的精神家园》。\n王小波使我明白应该将科学和艺术放在一起来看待，他将科学和艺术看作是能为人带来思想快乐的东西，二者都是人类智慧至高的产物。\n我认为自己体验到最大快乐的时期是初进大学时，因为科学对我来说是新奇的，而且它总是逻辑完备，无懈可击，这是这个平凡的尘世上罕见的东西。与此同时，也得以了解先辈科学家的杰出智力。这就如和一位高明的棋手下棋，虽然自己总被击败，但也有机会领略妙招。在我的同学里，凡和我同等年龄、有同等经历的人，也和我有同样的体验。某些单调机械的行为，比如吃、排泄、性交，也能带来快感，但因为过于简单，不能和这样的快乐相比。艺术也能带来这样的快乐，但是必须产生于真正的大师，象牛顿、莱布尼兹、爱因斯坦那样级别的人物，时下中国的艺术家，尚没有一位达到这样级别。恕我直言，能够带来思想快乐的东西，只能是人类智慧至高的产物。比这再低一档的东西，只会给人带来痛苦；而这种低档货，就是出于功利的种种想法。——节选自王小波《思维的乐趣》\n或许是因为王小波对科学和艺术的推崇，唤醒了我心中那遗失已久的对美术的兴趣，我开始借一些画本来看。 大二下的暑期，我报名参加了为期7天的澳门高校访学。在澳大的交流行程中，澳门大学美术艺术设计中心主任梁蓝波教授为我们带来了一场名为《跨界融合在艺术设计中的优势》的讲座。\n这场讲座带使我认识到，艺术不只是单方面、局限于专业画家的，通过将中西方哲学、数字媒体与艺术设计交融，打破传统艺术设计的惯性，从而带来创新。而这次讲座也让我感到艺术真是美大甚深，无论是表现出来的画面或者是背后的创作理念都是值得深思玩味的。\n生活当中也无处不是艺术设计，建筑风格、汽车型体、道路样式、人的服饰等等，只要是涉及到需要创造的东西，都需要进行艺术设计，因此具有一种对美的品味也显得很重要啦。\n唔，回顾了一下我关于艺术的历程。接下来谈一下看数字艺术展和莫梵展的体会吧。\n对于数字艺术展和莫梵展，我认为可以将其看作新兴艺术和传统艺术的两个代表。而二者的区别在于前者加入了数字科技的因素，例如元宇宙、区块链、AI等等。\n那么，AI绘画相对于传统绘画的区别是什么呢？在我看来，AI绘画相对于传统绘画，它无法捕捉人在创造画的过程中，对细微处的处理，例如，画家对一幅画的某几处点缀往往是整幅画的点睛之笔。但通过prompt让AI画出来的画，显得那么完美无缺。此外，两者的生命周期不同，AI绘画乃至整个数字绘画一旦完成，它的生命就终止了，但传统绘画若保存得当，其生命周期可以一直延续，因为会有自然环境中的各种因素对画的二次创作，例如天气的湿度、温度都在对画作进行“再创作”。\n但AI使绘画变得容易，对有思想有审美却缺乏创作技能的人打开了创造大门，也给画家带来了灵感和启发，为传统艺术注入了新鲜的血液。正如前面提到的，当数字科技引入传统艺术，二者开始交融、碰撞，便给艺术设计带来了新的可能性。\n未来是否会产生由AI开创的自成一派的绘画风格呢？我想肯定会的。\n","title":"观数字艺术与莫梵展的体会","uri":"/posts/digital-traditional-arts/"},{"content":"组内需要我接手做一个强化学习的项目，由于是第一次接触强化学习，很多东西都不懂，于是找了一些相关资料来看。 在阅读王树森的《深度强化学习》一书中，作者将蒙特卡洛方法作为学习强化学习的基础知识进行了介绍，并举例说明了如何使用蒙特卡洛近似 $\\pi$ 。但我对于书中的解释不是很理解，在网上也并未找到合适的蒙特卡洛近似 $\\pi$ 的数学解释，在与朋友的讨论过程中，我觉得自己似乎找到了一种较为合理的数学解释方法。 先来简单介绍一下蒙特卡洛方法。蒙特卡洛方法（Monte Carlo methods）是一类随机算法的总称，它们依靠重复随机采样来估算真实值。其提出者为冯·诺伊曼、斯塔尼斯拉夫·乌拉姆和尼古拉斯·梅特罗波利斯，由于乌拉姆的叔叔经常在摩纳哥的蒙特卡洛赌场输钱得名。 接下来，我们来看看如何使用蒙特卡洛方法估算圆周率。假设我们有一个随机数生成器，可以均匀地生成 $[-1,1]$ 区间的数，也就是说$[-1,1]$区间内的任何数被抽中的概率是相等的。 我们利用这个随机数生成器生成两个数分别记为 $x$ 和 $y$ ，并将其作为平面坐标系中的一个点$(x, y)$ 用三角形表示。如下图所示，由于$x$ 和 $y$ 在$[-1,1]$上均匀分布，因此正方形内的点被抽中的概率是相等的。 设事件 $A$ 表示点位于圆内。由于抽样是均匀的，对于每次随机生成一个点而言，事件A发生的概率为圆的面积与正方形的面积之比，也就是 $$ P(A) = \\frac{\\pi}{4} $$ 我们重复试验 $n$ 次，生成 $n$ 个点。在每次试验中，事件 $A$ 或者发生，或者不发生。显然，这 $n$ 次试验结果互不影响，相互独立。 设随机变量 $X$ 表示这 $n$ 次独立重复试验中事件 $A$ 发生的次数，也就是在这 $n$ 个点中位于圆内的点的数量。每次试验中事件 $A$ 发生的概率为 $p$ ，则 $X$ 服从伯努利分布，即 $X ～ B(n,p)$. 每次试验只有两种可能结果，即事件A发生或者不发生，令 $$ X_i=\\left\\{\\begin{array}{l} 1, 在第i次试验中事件A发生 \\\\ 0, 在第i次试验中事件A不发生 \\end{array}\\right.(i = 1,2, ...n) $$ 则每一个 $X_i(i = 1,2,…,n)$服从$0-1$分布，且有相同的分布律 $$ \\begin{array}{l|ll} X_i \u0026 0 \u0026 1 \\\\ \\hline p_i \u0026 1-\\frac{\\pi}{4} \u0026 \\frac{\\pi}{4} \\end{array} $$ 其中$i = 1, … , n$ ，$n$ 次伯努利试验中圆内点的数量 $$ X = X_1 + X_2 + … + X_n $$ 即伯努利分布随机变量可以分解成 $n$ 个 取值互不影响的$0-1$分布随机变量之和。 由伯努利大数定理可得 $$\\lim_{n \\rightarrow \\infty} P\\left\\{\\left|\\frac{X}{n}-p\\right|\u003c\\varepsilon\\right\\}=1$$ 上式表明，事件A发生的频率收敛于事件A发生的概率。换言之，假如我们进行了 $n$ 次试验，生成了 $n$ 个点，其中位于圆内的有 $m$ 个点。如果 $n$ 足够大，$m$ 与 $n$ 的比值就会非常接近点位于圆内的概率: $$ \\frac{m}{n} \\approx \\frac{\\pi}{4} $$ 由此得到 $$ \\pi \\approx \\frac{4m}{n} $$ 使用蒙特卡洛方法近似 $\\pi$ 的数学解释到此结束，编程倒是很容易啦，代码如下 def approxiate_pi(n): m = 0 for i in range(n): x = np.random.uniform(-1, 1) y = np.random.uniform(-1, 1) if x**2 + y**2 \u003c= 1: m += 1 pi = 4.0 * m / n return pi 在这里需要注意的是，我们使用了np.random.uniform方法从给定的区间中均匀抽样，利用圆的解析方程 $x^2 + y^2 = 1$ 来判断点是否位于圆内。 References 苏德矿 张继昌. 概率论与数理统计[M]. 1. 高等教育出版社, 2006-6-1. 王树森 黎彧君 张志华. 深度强化学习[M]. 1. 人民邮电出版社, 2022-11. ","title":"蒙特卡洛近似圆周率的数学原理","uri":"/posts/%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E8%BF%91%E4%BC%BC%E5%9C%86%E5%91%A8%E7%8E%87/"},{"content":"前言 最近在看一些深度学习相关的书，感觉对于参考文献1中的mini-batch部分理解得不是很透彻，主要是因为神经网络的输入开始变成批数据，加之对python的numpy不是很熟了。所以总想写点什么，一来有助于加深对于知识的理解，二来也算是分享知识^.^咯。 闲话少叙，让我们进入正题。\n正文 在机器学习中，学习的目标是选择期望风险$R_{exp}$(expected loss)最小的模型，但在实际情况下，我们不知道数据的真实分布（包含已知样本和训练样本），仅知道训练集上的数据分布。因此，我们的目标转化为最小化训练集上的平均损失，这也被称为经验风险$R_{emp}$(empirical loss)。\n严格地说，我们应该计算所有训练数据的损失函数的总和，以此来更新模型参数(Batch Gradient Descent)。但随着数据集的不断增大，以ImagNet数据集为例，该数据集的数据量有百万之多，计算所有数据的损失函数之和显然是不现实的。若采用计算单个样本的损失函数更新参数的方法(Stochastic Gradient Descent)，会导致$R_{emp}$难以达到最小值，而且在数值处理上不能使用向量化的方法提高运算速度。\n于是，我们采取一种折衷的想法，即取一部分数据，作为全部数据的代表，让神经网络从这每一批数据中学习，这里的“一部分数据”称为mini-batch，这种方法称为mini-batch学习。\n以下图为例，蓝色的线表示Batch Gradient Descent，紫色的线表示Stochastic Gradient Descent，绿色的线表示Mini-Batch Gradient Descent。 从上图可以看出，Mini-Batch相当于结合了Batch Gradient Descent和Stochastic Gradient Descent各自的优点，既能利用向量化方法提高运算速度，又能基本接近全局最小值。\n对于mini-batch学习的介绍到此为止。下面我们将MINIST数据集上的分类问题作为背景，以交叉熵cross-entropy损失函数为例，来实现一下mini-bacth版的cross-entropy error。\n给出cross-entropy error的定义如下: $$ E = - \\sum_{k}t_k \\log(y_k)\\tag{1} $$\n其中$y_k$表示神经网络输出，$t_k$表示正确解标签。\n等式1表示的是针对单个数据的损失函数，现在我们给出在mini-batch下的损失函数，如下 $$ E = -\\frac{1}{N}\\sum_{n}\\sum_{k}t_{nk}\\log(y_{nk})\\tag{2} $$\n其中N表示这一部分数据的数量，$t_{nk}$表示第n个数据在第k个元素的值（$y_{nk}$表示神经网络输出，$t_{nk}$表示监督数据）\n我们来看一下用Python如何实现mini-batch版的cross-entropy error。针对监督数据$t_{nk}$的标签形式是否为one-hot，进行分类讨论处理。\n此外，需要明确的一点是，对于一个分类神经网络，最后一层经过softmax函数处理后，输出$y_{nk}$是一个$n$x$k$的矩阵，$y_{ij}$表示第i个数据被预测为$j(0 \\leq j\\leq10)$的概率，特别地，当$N=1$时，$y$是一个包含10个元素的向量，类似于[0.1,0.2…0.3]，其中0.1表示输入数据预测为0的概率为0.1，0.2表示将输入数据预测为1的概率为0.2，其他情况以此类推。\n首先，对于$t_{nk}$为one-hot表示的情况，代码块1如下\ndef cross_entropy_error(y,t): batch_size = y.shape[0] return -np.sum(t * np.log(y + 1e-7)) / batch_size 在上面的代码中，我们在$y$上加了一个微小值，防止出现np.log(0)的情况，因为np.log(0)会变成负无穷大-inf，从而导致后续的计算无法继续进行。在等式2中$y_{nk}$与$t_{nk}$下标相同，所以我们直接使用*做element-wise运算，即对应元素相乘。\n但当我们希望同时能够处理单个数据和批量数据时，代码块1还不能满足我们的要求。因为当$N=1$时，$y$是一个包含10个元素的一维向量，输入到函数中，batch_size将等于10而不是1，于是我们将代码块1进行进一步完善，如下：\ndef cross_entropy_error(y,t): if y.ndim == 1: y = y.reshape(1,y.size) t = t.reshape(1,t.size) batch_size = y.shape[0] return -np.sum(t * np.log(y + 1e-7)) / batch_size 最后，来讨论一下$t_{nk}$为非one-hot表示的情况。在one-hot情况的计算中，t为0的元素cross-entropy error也为0，所以对于这些元素的计算可以忽略。换言之，在非one-hot表示的情况下，我们只需要计算正确解标签的交叉熵误差即可。代码如下：\ndef cross_entropy_error(y,t): if y.ndim == 1: y = y.reshape(1,y.size) t = t.reshape(1,t.size) batch_size = y.shape[0] return -np.sum(1 * np.log(y[np.arange(batch_size),t]+1e-7))/batch_size 在上面的代码中，y[np.arange(batch_size),t]表示将从神经网络的输出中抽出与正确解标签相对应的元素。\n结语 在写这篇博文的过程中，我感觉自己其实和machine learning还隔着一层纸窗，需要通过数学捅破，不过，这件事我想放在假期来做，做毕设要紧T_T。此外，程序设计能力还需要提高呀~0.0bb\n参考文献 [1] 深度学习入门\n[2] DeepLearning.ai深度学习课程笔记\n[3] 统计学习方法\n","title":"Learning with Mini-Batch","uri":"/posts/learning-with-minibbatch/"},{"content":"关于我（About me） 我叫 蒋易耕 ，yigeng 是我在网上的昵称。2022年推免至厦门大学MAC实验室攻读人工智能硕士，我的研究方向是自动机器学习、模型压缩等方面。AI 作为数学、计算机、生物等学科的交集，我觉得这些都是很有趣且具有美感的东西。\nMy name is Yigeng Jiang, and yigeng is my nickname on the Internet.In 2022, I was admitted to Media Analytics and Computing Lab, Xiamen University to pursue a master’s degree in artificial intelligence without entrance examination. My research interests are in automatic machine learning and model compression related areas. As the intersection of mathematics, computer science, biology and other disciplines, I think AI is very interesting and beautiful.\n学习之外，我热爱运动和阅读。运动能够使我更加专注且提高团队协作能力。除了看与研究相关的书，我主要爱看一些历史、哲学、文学等方面的书。读这些书能够使我有别于自然科学的角度，更全面地认识这个世界。\nBesides studying, I love sports and reading. Sports can make me more focused and improve my teamwork skills. In addition to reading books related to research, I mainly enjoy reading literature, history, philosophy and other subjects. Reading these books can give me a different perspective from natural sciences and help me understand the world more comprehensively.\n当我比较有空的时候，我还会去旅游、看展、听音乐会。中国有句古话“读万卷书，行万里路”，旅游让我感到这个世界的丰富多彩，学到很多书里学不到的。看展览与听音乐会是因为我对于人文艺术很有兴趣，艺术和科学一样都是很美的。\nWhen I am free, I like to travel or visit exhibitions. There is an ancient Chinese saying that goes ‘Read ten thousand books and travel ten thousand miles’. Travel makes me feel that the world is rich and colorful. I have learned a lot of things that can not be learned in books. I also enjoy visiting exhibitions because I am very interested in humanities and arts. Art, like science, is beautiful.\n对了，我还很喜欢中国传统文化。在我看来，中国古代的文人士大夫和近现代的科学家都有一种别样风骨。王小波写过一本书叫作《我的精神家园》，而传统文化和自然科学则共同构建了属于我自己的精神家园。\nBy the way, I also like Chinese traditional culture. In my opinion, ancient Chinese literati scholars and modern scientists have their own unique style. Wang Xiaobo wrote a book called “My Spiritual Home”, while Chinese traditional culture and natural sciences together build my own spiritual home.\nCONTACT I do not use Instant Messenger very often, the most convenient way to contact me is sending me an email.\nEmail: yigengjiang@gmail.com\n其他链接 知乎 豆瓣 博客园 ","title":"About","uri":"/about/"},{"content":"The searching is performed via fuse.js. For the search keywords, white spaces act as the AND operator, and | acts as the OR operator. To match an exact phrase, double quote it. For example, R Markdown matches articles that contain both R and Markdown, R | Markdown matches articles that contain R or Markdown, and \"R Markdown\" matches articles that contain the whole phrase R Markdown.\n","title":"Search","uri":"/search/"}]
